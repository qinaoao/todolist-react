{"version":3,"sources":["serviceWorker.js","Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["Boolean","window","location","hostname","match","Todoinput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleinput","e","keyCode","props","addtodo","target","value","setState","val","handlechange","console","log","state","_this2","react_default","a","createElement","style","backgroundColor","width","height","color","marginLeft","paddingRight","fontSize","marginTop","htmlFor","onChange","type","id","placeholder","borderRadius","onKeyDown","Component","Todoing","handledelete","idx","todo","delete","todelete","float","textAlign","todolist1","length","map","item1","index1","key","checked","tosubmit","onClick","todolist2","item2","index2","toreturns","Todolist","addItem","list","list1","push","localStorage","setItem","deleteItem1","splice","deleteItem2","list2","submitItem","llist","returnItem","getItem","split","Todoinput_Todoinput","Todoing_Todoing","ReactDOM","render","Todolist_Todolist","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd111a2c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Todoinput extends Component {\n    constructor(){\n        super();\n        this.state = {\n            val : ''\n        }\n    }\n   handleinput = (e) => {\n       if(e.keyCode === 13){\n           this.props.addtodo(e.target.value);\n           this.setState({\n               val : ''\n           })\n       }\n   }\n   handlechange = (e) => {\n       this.setState({\n           val : e.target.value\n       })\n        console.log(this.state.val);\n   }\n    render() {\n        return (\n            <div style ={{backgroundColor : 'black', width : 'auto', height : 50}}>\n                <label style = {{color : 'white',marginLeft:'35%',paddingRight : '10%' ,fontSize : 20 ,marginTop :10}} htmlFor = 'head'>ToDoList </label>\n                <input onChange = {(e) =>this.handlechange(e)}  value = {this.state.val} type = 'text'  id = 'head' placeholder = '添加Todo' style = {{borderRadius : 5,width : 200,height : 20,marginTop :10}} onKeyDown = {(e) => {this.handleinput(e)}}></input>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Todoing extends Component {\n\n    handledelete = (idx) => {\n        this.props.todo(idx);\n    }\n    delete = (idx) => {\n        this.props.todelete(idx);\n    }\n    render() {\n        return (\n            <div>\n                 <div>\n                    <div style = {{width : '100%'}}><h4 style = {{width : '20%',float : \"left\",marginLeft : '50%'}}>正在进行</h4><div style = {{backgroundColor : 'grey',width: 30, height :30,float : \"left\",marginTop : 20,marginLeft : 200,textAlign :'center'}}>{this.props.todolist1 == null ? 0:this.props.todolist1.length}</div></div>\n                    <ul>\n                        {this.props.todolist1 == null ? '' :(this.props.todolist1.length > 0?this.props.todolist1.map((item1,index1) => {\n                            return <li key = {'1' + index1} style = {{float : \"left\",marginLeft : '50%' ,width : 200,height : 50}}><input type = 'checkbox' checked = {false}  onChange = {() => this.props.tosubmit(index1)}/>{item1}<button onClick = {() => this.handledelete(index1)}>btn</button></li>\n                        }):'')}\n                    </ul>\n                </div>\n                <div>\n                    <div style = {{width : '100%'}}><h4 style = {{width : '20%',float : \"left\",marginLeft : '50%'}}>已经完成</h4><div style = {{backgroundColor : 'grey',width: 30, height :30,float : \"left\",marginTop : 20,marginLeft : 200,textAlign :'center'}}>{this.props.todolist2== null ? 0:this.props.todolist2.length}</div></div>\n                    <ul>\n                        {this.props.todolist2 == null?'':(this.props.todolist2.length > 0?this.props.todolist2.map((item2,index2) => {\n                            return <li key = {'2' + index2} style = {{float : \"left\",marginLeft : '40%',width : 200,height : 50}}><input type = 'checkbox'  checked = {true} onChange = {() =>  this.props.toreturns(index2)}/>{item2}<button onClick = {() => {this.delete(index2)}}>btn</button></li>\n                        }):'')}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Todoinput from './Todoinput'\nimport Todoing from './Todoing'\nexport default class Todolist extends Component {\n    constructor(){\n        super();\n        this.state = {\n            list1:!localStorage.getItem('key1')?[]:localStorage.getItem('key1').split(','),\n            list2:!localStorage.getItem('key2')?[]:localStorage.getItem('key2').split(',')\n        }}\n    addItem = (value) => {\n            let list = this.state.list1;\n            list.push(value);\n            this.setState({\n                list1 : list\n            },()=>localStorage.setItem('key1',list))\n    }\n    deleteItem1 = (idx) => {\n        let list = this.state.list1;\n        list.splice(idx,1);\n        this.setState({\n            list1 : list\n        },()=>localStorage.setItem('key1',list))\n    }\n    deleteItem2 = (idx) => {\n        let list = this.state.list2;\n        list.splice(idx,1);\n        this.setState({\n            list2 : list\n        },()=>localStorage.setItem('key2',list))}\n    submitItem = (idx) => {\n        let list = this.state.list1;\n        let llist = this.state.list2;\n        llist.push(list[idx]);\n        list.splice(idx,1);\n        this.setState({\n            list1 : list,\n            list2 : llist\n        },()=>{localStorage.setItem('key1',list);localStorage.setItem('key2',llist)})}\n    returnItem = (idx) => {\n        let list = this.state.list1;\n        let llist = this.state.list2;\n       list.push(llist[idx]);\n        llist.splice(idx,1);\n        this.setState({\n            list1 : list,\n            list2 : llist\n        },()=>{localStorage.setItem('key1',list);localStorage.setItem('key2',llist)})}\n    render() {\n        return (\n            <div>\n               <Todoinput addtodo = {this.addItem}/>\n               <Todoing todo = {this.deleteItem1} tosubmit = {this.submitItem} todelete = {this.deleteItem2} todolist1 = {this.state.list1} todolist2 = {this.state.list2} toreturns = {this.returnItem}/>\n            </div> \n            \n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Todolist from './Todolist/Todolist'\n\nReactDOM.render(<Todolist />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}